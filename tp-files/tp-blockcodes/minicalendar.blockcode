<info>
TinyPortal BlockCode file.
format: Boardmod
</info>

<name>
Mini calendar2
</name>

<author>
Bloc
</author>

<version>
0.3
</version>

<date>
20.jan.2019
</date>

<code>
global $scripturl;

$now = time();
$today = date('j',$now);
$year = date("Y",$now);
$month = date("n",$now);
$days = array($today => array(NULL, NULL, '<a class="smalltext" style="color: steelblue; font-weight: bold; border: solid 1px black; background-color: white;" href="'.$scripturl.'?action=calendar;sa=view;month='.$month.';year='.$year.';day='.$today.'" target="_self">'.$today.'</a>'));

$day_name_length = 2;
$month_href = $scripturl . '?action=calendar';
$first_day = 1;
$pn = array();

$first_of_month = gmmktime(0,0,0,$month,1,$year);
//remember that mktime will automatically correct if invalid dates are entered
// for instance, mktime(0,0,0,12,32,1997) will be the date for Jan 1, 1998
// this provides a built in "rounding" feature to generate_calendar()

$day_names = array(); //generate all the day names according to the current locale
for($n=0,$t=(3+$first_day)*86400; $n<7; $n++,$t+=86400) //January 4, 1970 was a Sunday
	$day_names[$n] = ucfirst(gmstrftime('%A',$t)); //%A means full textual day name

list($month, $year, $month_name, $weekday) = explode(',', gmstrftime('%m,%Y,%B,%w', $first_of_month));
$weekday = ($weekday + 7 - $first_day) % 7; //adjust for $first_day
$title   = TinyPortal\Model\Util::htmlspecialchars(ucfirst($month_name)).' '.$year;  //note that some locales don't capitalize month and day names

//Begin calendar. Uses a real <caption>. See http://diveintomark.org/archives/2002/07/03
@list($p, $pl) = each($pn);
@list($n, $nl) = each($pn); //previous and next links, if applicable
if($p) 
	$p = '<span class="smalltext">'.($pl ? '<a href="'.htmlspecialchars($pl).'">'.$p.'</a>' : $p).'</span> ';
if($n) 
	$n = ' <span class="smalltext">'.($nl ? '<a href="'.htmlspecialchars($nl).'">'.$n.'</a>' : $n).'</span>';
$calendar = '<table>'."\n".
'<caption >'.$p.($month_href ? '<a href="'.htmlspecialchars($month_href).'">'.$title.'</a>' : $title).$n."</caption>\n<tr>";

if($day_name_length){ #if the day names should be shown ($day_name_length > 0)
	//if day_name_length is >3, the full name of the day will be printed
	foreach($day_names as $d)
		$calendar .= '<th class="smalltext" abbr="'.htmlentities($d).'" style="padding: 4px 2px;">'.htmlentities($day_name_length < 4 ? substr($d,0,$day_name_length) : $d).'</th>';
		
	$calendar .= "</tr>\n<tr style=\"text-align:right;\">";
}

if($weekday > 0) 
	$calendar .= '<td class="smalltext" colspan="'.$weekday.'"> </td>'; //initial 'empty' days
for($day=1,$days_in_month=gmdate('t',$first_of_month); $day<=$days_in_month; $day++,$weekday++){
	if($weekday == 7){
		$weekday   = 0; #start a new week
		$calendar .= "</tr>\n<tr style=\"text-align:right;\">";
	}
	if(isset($days[$day]) and is_array($days[$day])){
		@list($link, $classes, $content) = $days[$day];
		if(is_null($content))  
			$content  = $day;
		$calendar .= '<td '.($classes ? ' class="'.htmlspecialchars($classes).'" style="padding:1px 6px 1px 1px;">' : ' style="padding:1px 6px 1px 1px;">').
		($link ? '<a href="'.htmlspecialchars($link).'?">'.$content.'</a>' : $content).'</td>';
	}
	else 
	{
		$calendar .= "<td class=\"smalltext\" style=\"padding:1px 5px 1px 4px;font-size: 0.85em;\"><a";
		if(((($weekday+$first_day) % 7)==0)||((($weekday+$first_day) % 7)==6))
		{
			$calendar .= ' style="color:#C00000;"';
		}
		$calendar .= " href=\"".$scripturl."?action=calendar;sa=view;month=".$month.";year=".$year.";day=".$day."\" target=\"_self\">$day</a></td>";
	}
}
if($weekday != 7) 
	$calendar .= '<td class="smalltext" colspan="'.(7-$weekday).'"> </td>'; //remaining "empty" days

echo $calendar."</tr>\n</table>\n";
</code>

<description>
A simple calendar to be used in a php-block, the code is from http://keithdevens.com/software/php_calendar , slightly modified. 
It simply displays the date and the days in current month/year. Current day is highlighted. Version 0.3 is updated to be used in ELK 2.1 and fit in the side bars.
</description>
